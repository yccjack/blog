<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mystic.ycc.blog.dao.UserMsgDao">
    <resultMap id="BaseResultMap" type="com.mystic.ycc.blog.entity.UserMsg">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="from_user_id" jdbcType="INTEGER" property="fromUserId"/>
        <result column="from_username" jdbcType="VARCHAR" property="fromUsername"/>
        <result column="msg_type" jdbcType="INTEGER" property="msgType"/>
        <result column="is_read" jdbcType="INTEGER" property="isRead"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="content_id" jdbcType="INTEGER" property="contentId"/>
        <result column="discuss_id" jdbcType="INTEGER" property="discussId"/>
        <result column="reply_id" jdbcType="INTEGER" property="replyId"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , user_id, from_user_id, from_username, msg_type, is_read, create_time, content_id,
    discuss_id, reply_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_msg
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user_msg
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.mystic.ycc.blog.entity.UserMsg"
            useGeneratedKeys="true">
        insert into user_msg (user_id, from_user_id, from_username,
                              msg_type, is_read, create_time,
                              content_id, discuss_id, reply_id)
        values (#{userId,jdbcType=INTEGER}, #{fromUserId,jdbcType=INTEGER}, #{fromUsername,jdbcType=VARCHAR},
                #{msgType,jdbcType=INTEGER}, #{isRead,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
                #{contentId,jdbcType=INTEGER}, #{discussId,jdbcType=INTEGER}, #{replyId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.mystic.ycc.blog.entity.UserMsg"
            useGeneratedKeys="true">
        insert into user_msg
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="fromUserId != null">
                from_user_id,
            </if>
            <if test="fromUsername != null">
                from_username,
            </if>
            <if test="msgType != null">
                msg_type,
            </if>
            <if test="isRead != null">
                is_read,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="contentId != null">
                content_id,
            </if>
            <if test="discussId != null">
                discuss_id,
            </if>
            <if test="replyId != null">
                reply_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="fromUserId != null">
                #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="fromUsername != null">
                #{fromUsername,jdbcType=VARCHAR},
            </if>
            <if test="msgType != null">
                #{msgType,jdbcType=INTEGER},
            </if>
            <if test="isRead != null">
                #{isRead,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contentId != null">
                #{contentId,jdbcType=INTEGER},
            </if>
            <if test="discussId != null">
                #{discussId,jdbcType=INTEGER},
            </if>
            <if test="replyId != null">
                #{replyId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.mystic.ycc.blog.entity.UserMsg">
        update user_msg
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="fromUserId != null">
                from_user_id = #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="fromUsername != null">
                from_username = #{fromUsername,jdbcType=VARCHAR},
            </if>
            <if test="msgType != null">
                msg_type = #{msgType,jdbcType=INTEGER},
            </if>
            <if test="isRead != null">
                is_read = #{isRead,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contentId != null">
                content_id = #{contentId,jdbcType=INTEGER},
            </if>
            <if test="discussId != null">
                discuss_id = #{discussId,jdbcType=INTEGER},
            </if>
            <if test="replyId != null">
                reply_id = #{replyId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mystic.ycc.blog.entity.UserMsg">
        update user_msg
        set user_id       = #{userId,jdbcType=INTEGER},
            from_user_id  = #{fromUserId,jdbcType=INTEGER},
            from_username = #{fromUsername,jdbcType=VARCHAR},
            msg_type      = #{msgType,jdbcType=INTEGER},
            is_read       = #{isRead,jdbcType=INTEGER},
            create_time   = #{createTime,jdbcType=TIMESTAMP},
            content_id    = #{contentId,jdbcType=INTEGER},
            discuss_id    = #{discussId,jdbcType=INTEGER},
            reply_id      = #{replyId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getUserMsgCount" resultType="com.mystic.ycc.blog.bean.UserMsgCount">
        select count(1) as count,msg_type as type
        from user_msg
        where user_id = #{userId} and is_read = 0
        group by msg_type
    </select>

    <select id="querySpMsgByType" resultType="com.mystic.ycc.blog.bean.UserMsgDetails">
        select a.*, b.nickname, b.avatar, c.contentTitle
        from user_msg a
                 left join user_info b on a.from_user_id = b.id
                 left join circle_content c on a.content_id =
                                               c.id
        where a.user_id = #{currentUser}
          and msg_type = 1
        union all
        select a.*,
               b.nickname,
               b.avatar,
               discuss_content as contentTitle
        from user_msg a
                 left join user_info b on a.from_user_id = b.id
                 left join discuss c on a.discuss_id = c.id
        where a.user_id = #{currentUser}
          and msg_type = 4
    </select>

    <select id="queryMsgByType" resultType="com.mystic.ycc.blog.bean.UserMsgDetails">
        select a.*, b.nickname, b.avatar, c.contentTitle
        from user_msg a
                 left join user_info b on a.from_user_id = b.id
                 left join circle_content c on a.content_id = c.id
        where a.user_id = #{currentUser}
          and msg_type = #{type}
    </select>

    <update id="updateMsgRead">
        update user_msg
        set is_read=1
        where user_id = #{currentUser}
          <choose>
              <when test="type==1">
                  and msg_type in(1,4)
              </when>
          <when test="type==4">
              and msg_type in(1,4)
          </when>
          <otherwise>
              and msg_type = #{type}
          </otherwise>
          </choose>

    </update>

    <delete id="readMsg">
        update user_msg
        set is_read=1
        where user_id = #{currentUser}
          and msg_type = #{type}
    </delete>

    <select id="getReply" resultType="com.mystic.ycc.blog.bean.DiscussReplyVo">
        select a.*, b.avatar, b.nickname, b.name, b.leverTitle, b.lever, b.id as avatar_id
        from discuss_reply a
                 left join user_info b on
            a.user_id = b.id
        where a.discuss_id = #{id}
        order by id limit ${limit}, 10
    </select>

    <select id="getDiscuss" resultType="com.mystic.ycc.blog.bean.DiscussVo">
        select a.*, b.avatar, b.nickname, b.name, b.leverTitle, b.lever, b.id as avatar_id
        from discuss a
                 left join user_info b on a.user_id = b.id
        where a.content_id = #{contentId}
    </select>

    <select id="getUserNickname" resultType="java.lang.String">
        select nickname
        from user_info where id= #{userId}
    </select>
    <select id="getDiscussReplyByDiscussId" resultType="com.mystic.ycc.blog.bean.DiscussReplyVo">
        select a.*, b.avatar, b.nickname, b.name, b.leverTitle, b.lever, b.id as avatar_id
        from discuss_reply a
                 left join user_info b on
            a.user_id = b.id
        where a.discuss_id = #{discussId}
        order by id desc
        limit 2

    </select>
    <select id="countDiscussReply" resultType="java.lang.Integer">
        select count(1)
        from discuss_reply
        where discuss_id = #{discussId}
    </select>
</mapper>